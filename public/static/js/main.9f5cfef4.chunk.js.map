{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","BrowserRouter","src","logo","alt","style","width","display","margin","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f5cfef4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({launch: { flight_number, mission_name, launch_date_local,\nlaunch_success }}) {\n    \n  return (\n    <div className=\"card card-body mb-3\">\n        <div className=\"row\">\n            <div className=\"col-md-9\">\n                <h4>Misión: {' '}\n                    <span\n                     className={classNames({\n                         'text-success': launch_success,\n                         'text-danger': !launch_success\n                     })} \n                     >\n                      { mission_name }\n                    </span>\n                </h4>\n                <p>Fecha: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\n            </div>\n            <div className=\"col-md-3\">\n                <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function MissionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n          <span className=\"px-3 mr-2 bg-success\"/> = Exitoso         \n      </p>\n      <p>\n          <span className=\"px-3 mr-2 bg-danger\"/> = Fallido         \n      </p>\n    </div>\n  )\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery{\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"display-4 my-3\">Lanzamientos</h1>\n        <MissionKey/>\n        <Query query={LAUNCHES_QUERY}>\n            {\n                ({ loading, error, data }) => {\n                    if(loading) return <h4>Cargando...</h4>\n                    if(error) console.log(error);\n                    console.log(data);\n                    \n                    return <Fragment>\n                        {\n                            \n                            data.launches.map(launch => (\n                                <LaunchItem key={launch.flight_number} launch={launch} />\n                            ))\n                        }\n                    </Fragment>\n                }\n            }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launches\n","import React, { Component, Fragment } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number,\n            mission_name,\n            launch_year,\n            launch_success,\n            launch_date_local,\n            rocket{\n                rocket_id,\n                rocket_name,\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport class Launch extends Component {\n  render() {\n      let { flight_number } = this.props.match.params;\n      flight_number = parseInt(flight_number);\n    return (\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n            {\n                ({ loading, error, data }) => {\n                    if(loading) return <h4>Cargando...</h4>;\n                    if(error) return console.log(error);\n\n                    const{ mission_name,\n                         flight_number,\n                          launch_year,\n                          launch_success,\n                          rocket: {\n                              rocket_id,\n                              rocket_name,\n                              rocket_type\n                          }\n                        } = data.launch;\n                    return <div>\n                        <h1 className=\"display-4 my-3\">\n                            <span className=\"text-dark\">Misión: </span>\n                            {mission_name}\n                        </h1>\n                        <h4 className=\"mb-3\">Detalles del Lanzamiento</h4>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">\n                                Número de vuelo: {flight_number}\n                            </li>\n                            <li className=\"list-group-item\">\n                                Año de Lanzamiento: {launch_year}\n                            </li>\n                            <li className=\"list-group-item\">\n                                Lanzamiento exitoso: <span className={classNames({\n                                    'text-success': launch_success,\n                                    'text-danger': !launch_success\n                                })}>{launch_success ? `Sí` : `No`}</span>\n                            </li>\n                            \n                        </ul>\n\n                        <h4 className=\"my-3\">Detalles del cohete</h4>\n                        <ul className=\"list-group\">\n                                <li className=\"list-group-item\">ID del cohete: {rocket_id}</li>\n                                <li className=\"list-group-item\">Nombre del cohete: {rocket_name}</li>\n                                <li className=\"list-group-item\">Tipo del cohete: {rocket_type}</li>\n                        </ul>\n                        <hr/>\n                        <Link to=\"/\" className=\"btn btn-secondary\">Regresar</Link>\n                    </div>\n                }\n            }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launch\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.png';\n\n\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nclass App extends Component {\n  render() {\n    return (\n      \n      <ApolloProvider client = {client}>\n        <Router>\n          <div className=\"container\">\n            <img src={logo} alt=\"SpaceX\" style={{\n              width:300,\n              display:'block',\n              margin:'auto'\n            }}/>\n            <Route exact path=\"/\" component = {Launches}/>     \n            <Route exact path=\"/launch/:flight_number\" component= {Launch}/>\n          </div>\n        </Router>\n      </ApolloProvider>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}